// Copyright (c) 2025 by ekxide IO GmbH. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

#ifndef IOX_PLATFORM_MINIMAL_POSIX_PLATFORM_SETTINGS_HPP
#define IOX_PLATFORM_MINIMAL_POSIX_PLATFORM_SETTINGS_HPP

#include <cstdint>
#include <limits.h>
#include <type_traits>

#define IOX_FEATURE_ACL 0

namespace iox
{
namespace platform
{

constexpr uint64_t IOX_MAX_FILENAME_LENGTH = NAME_MAX;
constexpr uint64_t IOX_MAX_PATH_LENGTH = PATH_MAX;
constexpr bool IOX_SHM_WRITE_ZEROS_ON_CREATION = true;
constexpr uint64_t IOX_MAX_SHM_NAME_LENGTH = NAME_MAX;
constexpr uint64_t IOX_NUMBER_OF_PATH_SEPARATORS = 1U;
constexpr const char IOX_PATH_SEPARATORS[IOX_NUMBER_OF_PATH_SEPARATORS] = {'/'};

constexpr uint64_t MAX_USER_NAME_LENGTH = 32;
constexpr uint64_t MAX_GROUP_NAME_LENGTH = 32;

#if __cplusplus >= 201703L
template <typename C, typename... Cargs>
using invoke_result = std::invoke_result<C, Cargs...>;
#else
template <typename C, typename... Cargs>
using invoke_result = std::result_of<C(Cargs...)>;
#endif

} // namespace platform
} // namespace iox

#endif // IOX_PLATFORM_MINIMAL_POSIX_PLATFORM_SETTINGS_HPP
